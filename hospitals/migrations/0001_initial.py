# -*- coding: utf-8 -*-
# Generated by Django 1.9.7 on 2016-11-20 22:18
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import hospitals.models
import month.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('planner', '0020_auto_20161121_0119')
    ]

    state_operations = [
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('contact_name', models.CharField(max_length=128)),
                ('email', models.EmailField(max_length=128)),
                ('phone', models.CharField(max_length=128)),
                ('extension', models.CharField(max_length=16)),
            ],
        ),
        migrations.CreateModel(
            name='DepartmentMonthSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', month.models.MonthField()),
                ('total_seats', models.PositiveIntegerField()),
                ('acceptance_criterion', models.CharField(blank=True, choices=[('FCFS', 'First-come, First-serve'), ('GPA', 'GPA')], max_length=4, null=True)),
                ('acceptance_start_date', models.DateTimeField(blank=True, null=True)),
                ('acceptance_end_date', models.DateTimeField(blank=True, null=True)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='monthly_settings', to='hospitals.Department')),
            ],
            bases=(hospitals.models.MonthSettingsMixin, models.Model),
        ),
        migrations.CreateModel(
            name='DepartmentSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('acceptance_criterion', models.CharField(choices=[('FCFS', 'First-come, First-serve'), ('GPA', 'GPA')], default='FCFS', max_length=4)),
                ('acceptance_start_date_interval', models.PositiveIntegerField(blank=True, null=True)),
                ('acceptance_end_date_interval', models.PositiveIntegerField(blank=True, null=True)),
                ('department', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='acceptance_settings', to='hospitals.Department')),
            ],
            bases=(hospitals.models.NonMonthSettingsMixin, models.Model),
        ),
        migrations.CreateModel(
            name='GlobalSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('acceptance_criterion', models.CharField(choices=[('FCFS', 'First-come, First-serve'), ('GPA', 'GPA')], default='FCFS', max_length=4)),
                ('acceptance_start_date_interval', models.PositiveIntegerField(blank=True, null=True)),
                ('acceptance_end_date_interval', models.PositiveIntegerField(blank=True, null=True)),
            ],
            bases=(hospitals.models.NonMonthSettingsMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Hospital',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('abbreviation', models.CharField(max_length=16)),
                ('is_kamc', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='MonthSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', month.models.MonthField(unique=True)),
                ('acceptance_criterion', models.CharField(choices=[('FCFS', 'First-come, First-serve'), ('GPA', 'GPA')], default='FCFS', max_length=4)),
                ('acceptance_start_date', models.DateTimeField(blank=True, null=True)),
                ('acceptance_end_date', models.DateTimeField(blank=True, null=True)),
            ],
            bases=(hospitals.models.MonthSettingsMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Specialty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('abbreviation', models.CharField(max_length=4)),
                ('required_months', models.PositiveIntegerField()),
                ('parent_specialty', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subspecialties', to='hospitals.Specialty')),
            ],
            options={
                'verbose_name_plural': 'Specialties',
            },
        ),
        migrations.AddField(
            model_name='department',
            name='hospital',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='departments', to='hospitals.Hospital'),
        ),
        migrations.AddField(
            model_name='department',
            name='parent_department',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sections', to='hospitals.Department'),
        ),
        migrations.AddField(
            model_name='department',
            name='specialty',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='departments', to='hospitals.Specialty'),
        ),
        migrations.AlterUniqueTogether(
            name='departmentmonthsettings',
            unique_together=set([('month', 'department')]),
        ),
    ]

    operations = [
        migrations.SeparateDatabaseAndState(
            state_operations=state_operations,
        )
    ]
